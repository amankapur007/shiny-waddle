/*
 * Copyright 2024 Oracle and/or its affiliates
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     https://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id("com.github.johnrengelman.shadow")
    id("cloud.graal.gcn.gcn-bom") 
    id("io.micronaut.application")
}

version = "1.0-SNAPSHOT"
group = "com.demo"

repositories {
    mavenCentral()
    
    maven { url "https://maven.oracle.com/public" }
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    micronautBoms(platform("cloud.graal.gcn:gcn-bom:4.2.1.3"))
    implementation("io.micronaut:micronaut-http-client")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.micronaut.reactor:micronaut-reactor")
    implementation("io.micronaut.reactor:micronaut-reactor-http-client") 

    implementation("io.micronaut:micronaut-management")

    implementation("io.micronaut.micrometer:micronaut-micrometer-core")
    implementation("io.micronaut.micrometer:micronaut-micrometer-observation")
    implementation("io.micronaut.micrometer:micronaut-micrometer-observation-http")
    implementation("io.micronaut.micrometer:micronaut-micrometer-registry-prometheus")

    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    runtimeOnly("io.micronaut.sql:micronaut-jdbc-hikari")
    compileOnly("jakarta.persistence:jakarta.persistence-api")
    runtimeOnly("mysql:mysql-connector-java")

    annotationProcessor("org.projectlombok:lombok")
    compileOnly("org.projectlombok:lombok")

    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut.problem:micronaut-problem-json")

    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    compileOnly("io.micronaut.openapi:micronaut-openapi-annotations")

    implementation("io.micronaut.rxjava3:micronaut-rxjava3-http-client")

    implementation("io.micronaut:micronaut-retry")







}


application {
    mainClass.set("com.demo.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}


graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.demo.*")
    }
}



